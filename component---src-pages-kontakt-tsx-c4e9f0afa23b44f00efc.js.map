{"version":3,"sources":["webpack:///./src/templates/MainTemplate.js","webpack:///./src/views/ContactView/styles.js","webpack:///./src/views/ContactView/ContactView.js","webpack:///./src/pages/kontakt.tsx","webpack:///./src/components/simple/SectionTitle/SectionTitle.js"],"names":["StyledWrapper","styled","div","StyledMain","main","GlobalStyle","createGlobalStyle","MainTemplate","children","isHomePage","defaultProps","StyledSectionInfo","StyledFormWrapper","StyledFormInner","StyledMapWrapper","ContactView","legend","button","isSubmitting","textarea","a","fieldset","ContactPage","title","SectionTitle","StyledH1","h1"],"mappings":"k4BAaA,IAAMA,EAAgBC,UAAOC,IAAV,KAObC,EAAaF,UAAOG,KAAV,KAIVC,EAAcC,4BAAH,KAyBXC,EAAe,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAChC,OACE,kBAACT,EAAD,KACE,kBAAC,QAAD,MACA,kBAACK,EAAD,MACA,kBAAC,IAAD,CAAQI,WAAYA,IACpB,kBAACN,EAAD,KAAaK,GACb,kBAAC,IAAD,QAKND,EAAaG,aAAe,CAC1BD,YAAY,GAQCF,O,8oGCnER,IAAMI,EAAoBV,UAAOC,IAAV,KAejBU,EAAoBX,UAAOC,IAAV,KAcjBW,EAAkBZ,UAAOC,IAAV,KAgBfY,EAAmBb,UAAOC,IAAV,KC8Kda,GD7Jad,UAAOe,OAAV,KAOEf,UAAOC,IAAV,KAOUD,UAAOC,IAAV,KAwBGD,UAAOgB,OAAV,KAoCzB,qBAAGC,cACc,4CAGf,qBAAGA,cAAmC,mBAchBjB,UAAOkB,SAAV,KA+CKlB,UAAOmB,EAAV,KASCnB,UAAOoB,SAAV,KACd,qBAAGH,aAAmC,OAAS,OClJxC,kBAClB,kBAACP,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,OA4IF,kBAACC,EAAD,SCjMWQ,UARK,kBAClB,kBAACf,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKgB,MAAM,YACX,kBAACC,EAAA,EAAD,gBACA,kBAAC,EAAD,S,ikBCRJ,IAAMC,E,UAAWxB,QAAOyB,GAAV,KAgCCF,IARM,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACtB,OAAO,kBAACiB,EAAD,KAAWjB","file":"component---src-pages-kontakt-tsx-c4e9f0afa23b44f00efc.js","sourcesContent":["import React from 'react';\r\n\r\n// Modules\r\nimport PropTypes from 'prop-types';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Reset } from 'styled-reset';\r\n\r\n// Utils\r\n\r\n// Components\r\nimport Header from 'components/Header/Header';\r\nimport Footer from 'components/Footer/Footer';\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-top: 54px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  min-height: calc(100vh - 56px);\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    margin: 0;\r\n    padding:0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n    background-color:#343a40;\r\n    color: #fff;\r\n\r\n  }\r\n\r\n  *, *:after, *:before{\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst MainTemplate = ({ children, isHomePage }) => {\r\n  return (\r\n    <StyledWrapper>\r\n      <Reset />\r\n      <GlobalStyle />\r\n      <Header isHomePage={isHomePage} />\r\n      <StyledMain>{children}</StyledMain>\r\n      <Footer />\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nMainTemplate.defaultProps = {\r\n  isHomePage: false,\r\n};\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n  isHomePage: PropTypes.bool,\r\n};\r\n\r\nexport default MainTemplate;\r\n","import styled from \"styled-components\"\r\n// import { Field } from 'formik';\r\n\r\nexport const StyledSectionInfo = styled.div`\r\n  color: #fff;\r\n  background-color: #222;\r\n\r\n  margin: 45px 0 0;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 992px) {\r\n    flex-flow: column;\r\n  }\r\n`\r\n\r\nexport const StyledFormWrapper = styled.div`\r\n  width: 90%;\r\n  max-width: 1440px;\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  z-index: 5;\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  @media (max-width: 992px) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nexport const StyledFormInner = styled.div`\r\n  width: 50%;\r\n  padding: 25px;\r\n  min-height: 500px;\r\n  margin-left: auto;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  background-color: #222;\r\n\r\n  @media (max-width: 992px) {\r\n    width: 100%;\r\n    padding: 25px 0;\r\n  }\r\n`\r\n\r\nexport const StyledMapWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: auto;\r\n  width: 50%;\r\n  height: 100%;\r\n  z-index: 6;\r\n\r\n  @media (max-width: 992px) {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nexport const StyledLegend = styled.legend`\r\n  color: #f9e242;\r\n  font-size: 2.5rem;\r\n  margin-bottom: 10px;\r\n  font-weight: 600;\r\n`\r\n\r\nexport const StyledError = styled.div`\r\n  background-color: #dc3545;\r\n  color: #fff;\r\n  font-size: 1.1rem;\r\n  padding: 5px 10px;\r\n`\r\n\r\nexport const StyledInputWrapper = styled.div`\r\n  min-width: 250px;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  & > p {\r\n    font-size: 1.4rem;\r\n    background: #545454;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    line-height: 1.2;\r\n  }\r\n\r\n  & > label {\r\n    font-size: 1.3rem;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    max-width: unset;\r\n  }\r\n`\r\n\r\nexport const StyledSubmitButton = styled.button`\r\n  padding: 20px;\r\n  text-decoration: none;\r\n  position: relative;\r\n  color: #f9e242;\r\n  border: 2px solid #f9e242;\r\n  cursor: pointer;\r\n  margin: 20px 0;\r\n  transition: transform 0.3s, color 0.3s, border-color 0.3s;\r\n  overflow: hidden;\r\n  font-weight: 600;\r\n  min-width: 250px;\r\n  font-size: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  background: none;\r\n  font-family: \"Montserrat\", sans-serif;\r\n\r\n  & span {\r\n    z-index: 5;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f9e242;\r\n    transform: translateX(-100%);\r\n    transition: transform 0.3s;\r\n  }\r\n\r\n  &:hover {\r\n    ${({ isSubmitting }) =>\r\n      !isSubmitting && \"color: #222;border-color: transparent;\"}\r\n\r\n    &:after {\r\n      ${({ isSubmitting }) => isSubmitting && \"display:none;\"}\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n`\r\n\r\n// export const StyledInput = styled(Field)`\r\n//   padding: 10px;\r\n//   margin: 12px 0 0;\r\n//   width: 100%;\r\n//   border: 1px solid #d1d1d1;\r\n//   font-family: \"Montserrat\", sans-serif;\r\n// `\r\n\r\nexport const StyledTextarea = styled.textarea`\r\n  padding: 10px;\r\n  margin: 12px 0 0;\r\n  width: 100%;\r\n  border: 1px solid #d1d1d1;\r\n  font-family: \"Montserrat\", sans-serif;\r\n`\r\n\r\n// export const StyledCheckbox = styled(Field)`\r\n//   position: absolute;\r\n//   opacity: 0;\r\n\r\n//   & + label {\r\n//     position: relative;\r\n//     cursor: pointer;\r\n//     padding: 0;\r\n//   }\r\n\r\n//   & + label:before {\r\n//     content: \"\";\r\n//     margin-right: 10px;\r\n//     display: inline-block;\r\n//     vertical-align: text-top;\r\n//     width: 20px;\r\n//     height: 20px;\r\n//     border: 2px solid #f9e242;\r\n//   }\r\n\r\n//   &:focus + label:before {\r\n//     box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12);\r\n//   }\r\n\r\n//   &:checked + label:before {\r\n//     background: #f9e242;\r\n//   }\r\n\r\n//   &:disabled + label {\r\n//     color: #b8b8b8;\r\n//     cursor: auto;\r\n//   }\r\n\r\n//   &:disabled + label:before {\r\n//     box-shadow: none;\r\n//     background: #ddd;\r\n//   }\r\n// `\r\n\r\nexport const StyledGatsbyLink = styled.a`\r\n  color: #f9e242;\r\n  transition: opacity 0.3s;\r\n\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport const StyledFieldset = styled.fieldset`\r\n  opacity: ${({ isSubmitting }) => (isSubmitting ? \"0.35\" : \"1\")};\r\n`\r\n","import React from \"react\"\r\n\r\n// Modules\r\n// import { Formik, Form, Field, ErrorMessage } from \"formik\"\r\n// import GoogleMapReact from 'google-map-react';\r\n// import axios from \"axios\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n// Components\r\nimport {\r\n  StyledSectionInfo,\r\n  StyledFormWrapper,\r\n  StyledFormInner,\r\n  StyledMapWrapper,\r\n  StyledLegend,\r\n  StyledError,\r\n  StyledInputWrapper,\r\n  StyledSubmitButton,\r\n  StyledInput,\r\n  StyledTextarea,\r\n  StyledCheckbox,\r\n  StyledGatsbyLink,\r\n  StyledFieldset,\r\n} from \"./styles\"\r\n\r\nconst renderMarkers = (map, maps) => {\r\n  const marker = new maps.Marker({\r\n    position: { lat: 50.160065, lng: 22.298928 },\r\n    map,\r\n    // icon: icons[features[i].type].icon,\r\n    title: \"Rumcajs \",\r\n  })\r\n\r\n  return marker\r\n}\r\n\r\nconst handleSubmit = (values, { resetForm, setSubmitting }) => {\r\n  setSubmitting(true)\r\n  const formData = new FormData()\r\n  formData.append(\"service_id\", \"gmail\")\r\n  formData.append(\"template_id\", \"template_VHE8b0Ru\")\r\n  formData.append(\"user_id\", \"user_4NvtMlo9dw816sW5SfxOV\")\r\n  const messageHtml = `Email: ${values.email} <br/>Imię: ${\r\n    values.name\r\n  }<br/>Telefon: ${values.phone}<br/>Pojazd: ${values.vehicleType}<br/>Treść: ${\r\n    values.content\r\n  }<br/>Oświadczenie zaznaczone: ${values.agreement ? \"TAK\" : \"NIE\"}`\r\n\r\n  formData.append(\"message_html\", messageHtml)\r\n\r\n  // axios\r\n  //   .post(\"https://api.emailjs.com/api/v1.0/email/send-form\", formData, {\r\n  //     headers: {\r\n  //       \"content-type\": \"multipart/form-data\",\r\n  //     },\r\n  //   })\r\n  //   .then(() => {\r\n  //     resetForm()\r\n  //     alert(\"Formularz został wysłany!\")\r\n  //     setSubmitting(false)\r\n  //   })\r\n  //   .catch(() => {\r\n  //     alert(`Oops...Wystąpił problem! Spróbuj wysłać formularz jeszcze raz.`)\r\n  //     setSubmitting(false)\r\n  //   })\r\n}\r\n\r\nconst ContactView = () => (\r\n  <StyledSectionInfo>\r\n    <StyledFormWrapper>\r\n      <StyledFormInner>\r\n        {/* <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            name: \"\",\r\n            phone: \"\",\r\n            vehicleType: \"\",\r\n            content: \"\",\r\n            agreement: false,\r\n          }}\r\n          validate={values => {\r\n            const errors = {}\r\n            if (!values.email) {\r\n              errors.email = \"To pole jest wymagane\"\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Niepoprawny adres e-mail\"\r\n            }\r\n\r\n            if (!values.name) {\r\n              errors.name = \"To pole jest wymagane\"\r\n            }\r\n\r\n            if (!values.vehicleType) {\r\n              errors.vehicleType = \"To pole jest wymagane\"\r\n            }\r\n\r\n            if (!values.agreement) {\r\n              errors.agreement = \"To pole musi być zaznaczone\"\r\n            }\r\n\r\n            if (!values.content) {\r\n              errors.content = \"To pole jest wymagane\"\r\n            }\r\n\r\n            return errors\r\n          }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <StyledFieldset isSubmitting={isSubmitting}>\r\n                <StyledLegend>Skontaktuj się z nami!</StyledLegend>\r\n                <p>Zgłoś się do nas poprzez poniższy formularz, oddzwonimy.</p>\r\n\r\n                <br />\r\n                <StyledInputWrapper>\r\n                  <StyledInput type=\"text\" name=\"name\" placeholder=\"Imię\" />\r\n                  <ErrorMessage name=\"name\" component={StyledError} />\r\n                </StyledInputWrapper>\r\n\r\n                <StyledInputWrapper>\r\n                  <StyledInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Adres E-mail\"\r\n                  />\r\n\r\n                  <ErrorMessage name=\"email\" component={StyledError} />\r\n                </StyledInputWrapper>\r\n                <StyledInputWrapper>\r\n                  <StyledInput\r\n                    type=\"number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Numer telefonu\"\r\n                  />\r\n                </StyledInputWrapper>\r\n                <StyledInputWrapper>\r\n                  <StyledInput\r\n                    type=\"text\"\r\n                    name=\"vehicleType\"\r\n                    placeholder=\"Pojazd\"\r\n                  />\r\n                  <ErrorMessage name=\"vehicleType\" component={StyledError} />\r\n                </StyledInputWrapper>\r\n\r\n                <StyledInputWrapper>\r\n                  <br />\r\n                  <p>\r\n                    Poniżej wprowadź treść swojego zapytania. <br /> Pamiętaj,\r\n                    aby dokładnie określić trasę oraz co będzie przewożone.\r\n                    Ułatwi to wycenę usługi.\r\n                  </p>\r\n                </StyledInputWrapper>\r\n                <StyledInputWrapper>\r\n                  <Field\r\n                    as={StyledTextarea}\r\n                    rows=\"5\"\r\n                    name=\"content\"\r\n                    placeholder=\"Wprowadź treść zapytania...\"\r\n                  />\r\n                  <ErrorMessage name=\"content\" component={StyledError} />\r\n                </StyledInputWrapper>\r\n                <br />\r\n                <StyledInputWrapper>\r\n                  <StyledCheckbox\r\n                    id=\"agreement\"\r\n                    type=\"checkbox\"\r\n                    name=\"agreement\"\r\n                  />\r\n                  <label htmlFor=\"agreement\">\r\n                    Oświadczam, że zapoznałem się i akceptuję treść{\" \"}\r\n                    <StyledGatsbyLink\r\n                      target=\"_blank\"\r\n                      rel=\"noopener norefferer\"\r\n                      href=\"/regulamin-serwisu/\"\r\n                    >\r\n                      Regulaminu Serwisu\r\n                    </StyledGatsbyLink>{\" \"}\r\n                    oraz{\" \"}\r\n                    <StyledGatsbyLink\r\n                      target=\"_blank\"\r\n                      rel=\"noopener norefferer\"\r\n                      href=\"/polityka-prywatnosci/\"\r\n                    >\r\n                      Polityki Ochrony Prywatności\r\n                    </StyledGatsbyLink>\r\n                    .\r\n                  </label>\r\n                  <ErrorMessage name=\"agreement\" component={StyledError} />\r\n                </StyledInputWrapper>\r\n\r\n                <StyledSubmitButton\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  isSubmitting={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <FontAwesomeIcon icon={faCog} className=\"fa-spin\" />\r\n                  ) : (\r\n                    <span>WYŚLIJ</span>\r\n                  )}\r\n                </StyledSubmitButton>\r\n              </StyledFieldset>\r\n            </Form>\r\n          )}\r\n        </Formik> */}\r\n      </StyledFormInner>\r\n    </StyledFormWrapper>\r\n    <StyledMapWrapper>\r\n      {/* <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyDQsU1P1vzNUktmPtJIe3GEnOMpz18jVT8\" }}\r\n        defaultCenter={{ lat: 50.160065, lng: 22.298928 }}\r\n        defaultZoom={11}\r\n        onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n      /> */}\r\n    </StyledMapWrapper>\r\n  </StyledSectionInfo>\r\n)\r\n\r\nexport default ContactView\r\n","import React from \"react\"\r\n\r\n// Modules\r\n\r\n// Components\r\nimport MainTemplate from \"templates/MainTemplate\"\r\nimport SEO from \"components/seo\"\r\nimport SectionTitle from \"components/simple/SectionTitle/SectionTitle\"\r\nimport ContactView from \"views/ContactView/ContactView\"\r\n\r\nconst ContactPage = () => (\r\n  <MainTemplate>\r\n    <SEO title=\"Kontakt\" />\r\n    <SectionTitle>Kontakt</SectionTitle>\r\n    <ContactView />\r\n  </MainTemplate>\r\n)\r\n\r\nexport default ContactPage\r\n","import React from 'react';\r\n\r\n// Modules\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledH1 = styled.h1`\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  margin: 30px auto 10px;\r\n  width: 90%;\r\n  max-width: 1440px;\r\n  position: relative;\r\n  padding: 0 0 20px 0;\r\n  line-height: 1.2;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100px;\r\n    height: 2px;\r\n\r\n    background: #f9e242;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    transition: background-color 0.3s;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = ({ children }) => {\r\n  return <StyledH1>{children}</StyledH1>;\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SectionTitle;\r\n"],"sourceRoot":""}